<?xml version="1.0" encoding="utf-8"?>
<topic id="5461d4c8-dc03-4170-b521-c57a739abf38" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>
        This library provides generic dictionaries designed to simplify the
        creation of an in-process cache.
      </para>
		</introduction>

		<section>
			<title>Overview</title>
			<content>
				<para>
          The library provides the following two, primary classes:
        </para>

				<list class="bullet">
					<listItem>
						<para>
              <codeEntityReference>T:Scaleout.Collections.RecentDictionary`2</codeEntityReference>:
              A collection of keys and values that tracks the order in which
              entries are accessed, suitable for creating a cache with an LRU or
              MRU eviction policy.
            </para>
					</listItem>

					<listItem>
						<para>
              <codeEntityReference>T:Scaleout.Collections.RouletteDictionary`2</codeEntityReference>:
              A collection of keys and values that allows random entries to be
              retrieved or removed, suitable for creating a cache with a random
              eviction policy.
            </para>
					</listItem>
				</list>

				<para>
          Both classes implement a SetAndMaintainCount method that can be used
          to set values while keeping the dictionary at a fixed size. If the
          operation results in a value being added, another entry will be
          removed to make room: The RecentDictionary will evict either the
          most-recently or least-recently used entry (depending on the eviction
          mode passed into the constructor), and RouletteDictionary will evict a
          random entry.
        </para>
			</content>
		</section>
<!--
		<relatedTopics>
		</relatedTopics>
-->
	</developerConceptualDocument>
</topic>
